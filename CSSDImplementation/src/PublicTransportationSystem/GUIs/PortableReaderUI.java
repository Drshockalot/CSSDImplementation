/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package PublicTransportationSystem.GUIs;

import PublicTransportationSystem.Journey;
import PublicTransportationSystem.Pass;
import PublicTransportationSystem.PortableReader;
import PublicTransportationSystem.SetOfTickets;
import PublicTransportationSystem.SetOfZones;
import PublicTransportationSystem.Ticket;
import PublicTransportationSystem.Transaction;
import PublicTransportationSystem.TravelCard;
import PublicTransportationSystem.TravelSystem;
import PublicTransportationSystem.TypeEnums;
import PublicTransportationSystem.User;
import PublicTransportationSystem.Zone;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author JackMcGlone
 */
public class PortableReaderUI extends javax.swing.JFrame {

    private PortableReader portableReader = new PortableReader();
    private TravelSystem system = null;
    private TravelCard currentCard = null;
    // Whether we're on a bus or train
    private String travelType = null;

    /**
     * Creates new form PortableReaderUI
     *
     */
    public PortableReaderUI() {
        initComponents();
        this.addFundsPanel.setVisible(false);
        this.payForTicketPanel.setVisible(false);
        this.validPassPanel.setVisible(false);
        this.scanPanel.setVisible(true);
        // Get a list of travel cards to scan
        setUpTravelSystemInstance();
        system.getTravelCards().stream().forEach((card) -> {
            this.travelCardsComboBox.addItem(card);
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLayeredPane1 = new javax.swing.JLayeredPane();
        scanPanel = new javax.swing.JPanel();
        scanCardTrainButton = new javax.swing.JButton();
        scanCardBusButton = new javax.swing.JButton();
        travelCardsComboBox = new javax.swing.JComboBox();
        scanPanelTravelCardLabel = new javax.swing.JLabel();
        pnl_portableReaderScanTitle = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        validPassPanel = new javax.swing.JPanel();
        passUserImage = new javax.swing.JPanel();
        validPassUserImagelabel = new javax.swing.JLabel(new javax.swing.ImageIcon(getClass().getResource("/Images/user_image.png")));
        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        passUserName = new javax.swing.JLabel();
        passUserDob = new javax.swing.JLabel();
        passUserID = new javax.swing.JLabel();
        passUserBalance = new javax.swing.JLabel();
        passConfirmInspection = new javax.swing.JButton();
        pnl_portableReaderPassTitle = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        payForTicketPanel = new javax.swing.JPanel();
        paymentUserImage = new javax.swing.JPanel();
        paymentUserImagelabel = new javax.swing.JLabel(new javax.swing.ImageIcon(getClass().getResource("/Images/user_image.png")));
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        paymentUserName = new javax.swing.JLabel();
        paymentUserDob = new javax.swing.JLabel();
        paymentUserID = new javax.swing.JLabel();
        paymentUserBalance = new javax.swing.JLabel();
        paymentConfirmInspection = new javax.swing.JButton();
        fromZone = new javax.swing.JComboBox();
        toZone = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        pnl_portableReaderScanTitle2 = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        addFundsPanel = new javax.swing.JPanel();
        addFundsTextField = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        addFundsButton = new javax.swing.JButton();
        pnl_portableReaderPassTitle1 = new javax.swing.JPanel();
        jLabel19 = new javax.swing.JLabel();

        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jLayeredPane1.setLayout(new javax.swing.OverlayLayout(jLayeredPane1));

        scanCardTrainButton.setText("Scan Card On Train");
        scanCardTrainButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                scanCardTrainButtonActionPerformed(evt);
            }
        });

        scanCardBusButton.setText("Scan Card On Bus");
        scanCardBusButton.setMaximumSize(new java.awt.Dimension(138, 24));
        scanCardBusButton.setMinimumSize(new java.awt.Dimension(138, 24));
        scanCardBusButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                scanCardBusButtonActionPerformed(evt);
            }
        });

        travelCardsComboBox.setModel(new javax.swing.DefaultComboBoxModel());

        scanPanelTravelCardLabel.setText("Travel Card:");

        pnl_portableReaderScanTitle.setBackground(new java.awt.Color(192, 221, 253));

        jLabel16.setBackground(new java.awt.Color(192, 221, 253));
        jLabel16.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/menu.png"))); // NOI18N
        jLabel16.setText("               Scanner");

        javax.swing.GroupLayout pnl_portableReaderScanTitleLayout = new javax.swing.GroupLayout(pnl_portableReaderScanTitle);
        pnl_portableReaderScanTitle.setLayout(pnl_portableReaderScanTitleLayout);
        pnl_portableReaderScanTitleLayout.setHorizontalGroup(
            pnl_portableReaderScanTitleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnl_portableReaderScanTitleLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnl_portableReaderScanTitleLayout.setVerticalGroup(
            pnl_portableReaderScanTitleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_portableReaderScanTitleLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel16)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout scanPanelLayout = new javax.swing.GroupLayout(scanPanel);
        scanPanel.setLayout(scanPanelLayout);
        scanPanelLayout.setHorizontalGroup(
            scanPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnl_portableReaderScanTitle, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(scanPanelLayout.createSequentialGroup()
                .addGap(98, 98, 98)
                .addGroup(scanPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scanPanelTravelCardLabel)
                    .addComponent(travelCardsComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(scanPanelLayout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(scanPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(scanCardBusButton, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(scanCardTrainButton))))
                .addContainerGap(112, Short.MAX_VALUE))
        );
        scanPanelLayout.setVerticalGroup(
            scanPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(scanPanelLayout.createSequentialGroup()
                .addComponent(pnl_portableReaderScanTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(66, 66, 66)
                .addComponent(scanPanelTravelCardLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(travelCardsComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48)
                .addComponent(scanCardTrainButton)
                .addGap(18, 18, 18)
                .addComponent(scanCardBusButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(238, Short.MAX_VALUE))
        );

        jLayeredPane1.add(scanPanel);

        passUserImage.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        validPassUserImagelabel.setText(null);

        javax.swing.GroupLayout passUserImageLayout = new javax.swing.GroupLayout(passUserImage);
        passUserImage.setLayout(passUserImageLayout);
        passUserImageLayout.setHorizontalGroup(
            passUserImageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(validPassUserImagelabel, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
        );
        passUserImageLayout.setVerticalGroup(
            passUserImageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(validPassUserImagelabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 96, Short.MAX_VALUE)
        );

        jLabel1.setFont(new java.awt.Font("Dialog", 0, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(153, 255, 153));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Valid Pass");

        jLabel5.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel5.setText("ID: ");

        jLabel6.setText("Credit:");

        passUserName.setFont(new java.awt.Font("Lucida Grande", 0, 22)); // NOI18N
        passUserName.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        passUserName.setText("user name");

        passUserDob.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        passUserDob.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        passUserDob.setText("dob");

        passUserID.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        passUserID.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        passUserID.setText("userid");

        passUserBalance.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        passUserBalance.setText("placeholder");

        passConfirmInspection.setBackground(new java.awt.Color(192, 221, 253));
        passConfirmInspection.setText("Save");
        passConfirmInspection.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passConfirmInspectionActionPerformed(evt);
            }
        });

        pnl_portableReaderPassTitle.setBackground(new java.awt.Color(192, 221, 253));

        jLabel17.setBackground(new java.awt.Color(192, 221, 253));
        jLabel17.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        jLabel17.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/menu.png"))); // NOI18N
        jLabel17.setText("        Customer Account");

        javax.swing.GroupLayout pnl_portableReaderPassTitleLayout = new javax.swing.GroupLayout(pnl_portableReaderPassTitle);
        pnl_portableReaderPassTitle.setLayout(pnl_portableReaderPassTitleLayout);
        pnl_portableReaderPassTitleLayout.setHorizontalGroup(
            pnl_portableReaderPassTitleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnl_portableReaderPassTitleLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnl_portableReaderPassTitleLayout.setVerticalGroup(
            pnl_portableReaderPassTitleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_portableReaderPassTitleLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout validPassPanelLayout = new javax.swing.GroupLayout(validPassPanel);
        validPassPanel.setLayout(validPassPanelLayout);
        validPassPanelLayout.setHorizontalGroup(
            validPassPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnl_portableReaderPassTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(validPassPanelLayout.createSequentialGroup()
                .addGroup(validPassPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(validPassPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(validPassPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(validPassPanelLayout.createSequentialGroup()
                                .addComponent(passUserImage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(validPassPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(passUserName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(validPassPanelLayout.createSequentialGroup()
                                        .addGroup(validPassPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(passUserDob, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(validPassPanelLayout.createSequentialGroup()
                                                .addComponent(jLabel5)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(passUserID, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(0, 43, Short.MAX_VALUE))))
                            .addGroup(validPassPanelLayout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(passUserBalance, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(validPassPanelLayout.createSequentialGroup()
                        .addGap(95, 95, 95)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(validPassPanelLayout.createSequentialGroup()
                .addGap(139, 139, 139)
                .addComponent(passConfirmInspection, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        validPassPanelLayout.setVerticalGroup(
            validPassPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(validPassPanelLayout.createSequentialGroup()
                .addComponent(pnl_portableReaderPassTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(validPassPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(passUserImage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(validPassPanelLayout.createSequentialGroup()
                        .addComponent(passUserName)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(passUserDob)
                        .addGap(12, 12, 12)
                        .addGroup(validPassPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(passUserID))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(validPassPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(passUserBalance))
                .addGap(102, 102, 102)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 108, Short.MAX_VALUE)
                .addComponent(passConfirmInspection)
                .addGap(76, 76, 76))
        );

        jLayeredPane1.add(validPassPanel);

        paymentUserImage.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        paymentUserImagelabel.setText(null);

        javax.swing.GroupLayout paymentUserImageLayout = new javax.swing.GroupLayout(paymentUserImage);
        paymentUserImage.setLayout(paymentUserImageLayout);
        paymentUserImageLayout.setHorizontalGroup(
            paymentUserImageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(paymentUserImagelabel, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
        );
        paymentUserImageLayout.setVerticalGroup(
            paymentUserImageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(paymentUserImagelabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
        );

        jLabel11.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel11.setText("ID: ");

        jLabel12.setText("Credit:");

        paymentUserName.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        paymentUserName.setText("user name");

        paymentUserDob.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        paymentUserDob.setText("dob");

        paymentUserID.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        paymentUserID.setText("userid");

        paymentUserBalance.setText("placeholder");

        paymentConfirmInspection.setText("Confirm Inspection");
        paymentConfirmInspection.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paymentConfirmInspectionActionPerformed(evt);
            }
        });

        fromZone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fromZoneActionPerformed(evt);
            }
        });

        toZone.setModel(new javax.swing.DefaultComboBoxModel());

        jLabel8.setText("From:");

        jLabel13.setText("To:");

        pnl_portableReaderScanTitle2.setBackground(new java.awt.Color(192, 221, 253));

        jLabel18.setBackground(new java.awt.Color(192, 221, 253));
        jLabel18.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        jLabel18.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/menu.png"))); // NOI18N
        jLabel18.setText("        Customer Account");

        javax.swing.GroupLayout pnl_portableReaderScanTitle2Layout = new javax.swing.GroupLayout(pnl_portableReaderScanTitle2);
        pnl_portableReaderScanTitle2.setLayout(pnl_portableReaderScanTitle2Layout);
        pnl_portableReaderScanTitle2Layout.setHorizontalGroup(
            pnl_portableReaderScanTitle2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnl_portableReaderScanTitle2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, 414, Short.MAX_VALUE))
        );
        pnl_portableReaderScanTitle2Layout.setVerticalGroup(
            pnl_portableReaderScanTitle2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_portableReaderScanTitle2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout payForTicketPanelLayout = new javax.swing.GroupLayout(payForTicketPanel);
        payForTicketPanel.setLayout(payForTicketPanelLayout);
        payForTicketPanelLayout.setHorizontalGroup(
            payForTicketPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnl_portableReaderScanTitle2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(payForTicketPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(payForTicketPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(payForTicketPanelLayout.createSequentialGroup()
                        .addGap(116, 116, 116)
                        .addComponent(paymentConfirmInspection)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(payForTicketPanelLayout.createSequentialGroup()
                        .addGroup(payForTicketPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, payForTicketPanelLayout.createSequentialGroup()
                                .addComponent(paymentUserImage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(payForTicketPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(paymentUserName, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(paymentUserDob, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(payForTicketPanelLayout.createSequentialGroup()
                                        .addComponent(jLabel11)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(paymentUserID, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                            .addComponent(fromZone, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(toZone, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())
                    .addGroup(payForTicketPanelLayout.createSequentialGroup()
                        .addGroup(payForTicketPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(payForTicketPanelLayout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jLabel12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(paymentUserBalance))
                            .addComponent(jLabel8)
                            .addComponent(jLabel13))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        payForTicketPanelLayout.setVerticalGroup(
            payForTicketPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(payForTicketPanelLayout.createSequentialGroup()
                .addComponent(pnl_portableReaderScanTitle2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7)
                .addGroup(payForTicketPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, payForTicketPanelLayout.createSequentialGroup()
                        .addComponent(paymentUserName)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(paymentUserDob)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(payForTicketPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(paymentUserID)
                            .addComponent(jLabel11)))
                    .addComponent(paymentUserImage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(payForTicketPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(paymentUserBalance, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(35, 35, 35)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(fromZone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(toZone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(104, 104, 104)
                .addComponent(paymentConfirmInspection)
                .addGap(60, 60, 60))
        );

        jLayeredPane1.add(payForTicketPanel);

        jLabel14.setText("£");

        addFundsButton.setText("Add Funds");
        addFundsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addFundsButtonActionPerformed(evt);
            }
        });

        pnl_portableReaderPassTitle1.setBackground(new java.awt.Color(192, 221, 253));

        jLabel19.setBackground(new java.awt.Color(192, 221, 253));
        jLabel19.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        jLabel19.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/menu.png"))); // NOI18N
        jLabel19.setText("             Add Funds");

        javax.swing.GroupLayout pnl_portableReaderPassTitle1Layout = new javax.swing.GroupLayout(pnl_portableReaderPassTitle1);
        pnl_portableReaderPassTitle1.setLayout(pnl_portableReaderPassTitle1Layout);
        pnl_portableReaderPassTitle1Layout.setHorizontalGroup(
            pnl_portableReaderPassTitle1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnl_portableReaderPassTitle1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel19, javax.swing.GroupLayout.DEFAULT_SIZE, 414, Short.MAX_VALUE))
        );
        pnl_portableReaderPassTitle1Layout.setVerticalGroup(
            pnl_portableReaderPassTitle1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_portableReaderPassTitle1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout addFundsPanelLayout = new javax.swing.GroupLayout(addFundsPanel);
        addFundsPanel.setLayout(addFundsPanelLayout);
        addFundsPanelLayout.setHorizontalGroup(
            addFundsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addFundsPanelLayout.createSequentialGroup()
                .addGap(130, 130, 130)
                .addComponent(jLabel14)
                .addGap(1, 1, 1)
                .addGroup(addFundsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(addFundsButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(addFundsTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(pnl_portableReaderPassTitle1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        addFundsPanelLayout.setVerticalGroup(
            addFundsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addFundsPanelLayout.createSequentialGroup()
                .addComponent(pnl_portableReaderPassTitle1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 148, Short.MAX_VALUE)
                .addGroup(addFundsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addFundsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14))
                .addGap(18, 18, 18)
                .addComponent(addFundsButton)
                .addGap(256, 256, 256))
        );

        jLayeredPane1.add(addFundsPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void scanCardTrainButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_scanCardTrainButtonActionPerformed
        // Train button pressed, we are on a train
        this.travelType = "TRAIN";

        try {
            // Read the travel card
            this.currentCard = this.portableReader.readTravelCard((TravelCard) this.travelCardsComboBox.getSelectedItem());
        } catch (Throwable ex) {
            Logger.getLogger(PortableReaderUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        setUpComponents();
    }//GEN-LAST:event_scanCardTrainButtonActionPerformed

    private void setUpComponents() {
        // Hide the first panel, we have our travel type now
        this.scanPanel.setVisible(false);

        // Get the user details from TravelCard and add them to the UI
        User currentUser = currentCard.getUser();
        setUpUserDetails(currentUser, currentCard);
        validateJourney(currentCard);
    }

    private void setUpTravelSystemInstance() {
        try {
            system = TravelSystem.getInstance();
        } catch (Throwable ex) {
            Logger.getLogger(PortableReaderUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void validateJourney(TravelCard currentCard) {
        // If there is a pass, check that it is a valid one
        // Decide which UI panel to show

        if (currentCard.isPassActive()) {
            TypeEnums.PassType passType = currentCard.getPassType();

            if ("BUS".equals(travelType)) {
                // If we're on a bus
                switch (passType) {
                    case BUSDAY:
                    case BUSANDTRAINDAY: {
                        // VALID PASS SCREEN
                        this.validPassPanel.setVisible(true);
                    }
                    case BUSJOURNEY:
                    case BUSANDTRAINJOURNEY: {
                        // Check the journey, approve/reject depending on result
                        this.payForTicketPanel.setVisible(true);
                    }
                }
            } else if ("TRAIN".equals(travelType)) {
                // Or on a train
                switch (passType) {
                    case TRAINDAY:
                    case BUSANDTRAINDAY: {
                        // VALID PASS SCREEN
                        this.validPassPanel.setVisible(true);
                    }
                    case TRAINJOURNEY:
                    case BUSANDTRAINJOURNEY: {
                        // Check the journey, approve/reject depending on result
                        this.payForTicketPanel.setVisible(true);
                    }
                }
            }
        } else {
            // The user does not have a pass
            this.payForTicketPanel.setVisible(true);
        }
    }

    private void scanCardBusButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_scanCardBusButtonActionPerformed
        // Bus button pressed, we are on a bus
        this.travelType = "BUS";

        try {
            // Read the travel card
            this.currentCard = this.portableReader.readTravelCard((TravelCard) this.travelCardsComboBox.getSelectedItem());
        } catch (Throwable ex) {
            Logger.getLogger(PortableReaderUI.class.getName()).log(Level.SEVERE, null, ex);
        }

        setUpComponents();
    }//GEN-LAST:event_scanCardBusButtonActionPerformed

    private void passConfirmInspectionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passConfirmInspectionActionPerformed
        // The user has a valid pass, display a confirmation message
        JOptionPane.showMessageDialog(validPassPanel, "Ticket Inspection Confirmed");
        this.validPassPanel.setVisible(false);
        this.payForTicketPanel.setVisible(false);
        this.scanPanel.setVisible(true);
    }//GEN-LAST:event_passConfirmInspectionActionPerformed

    private void paymentConfirmInspectionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paymentConfirmInspectionActionPerformed
        // Check the 'from' and 'to' zones entered by the user and compare them to the
        // values on their travel pass
        Pass targetPass = this.currentCard.getPass();
        if (targetPass != null) {
            if ((targetPass.arrivalZone() == this.toZone.getSelectedItem())
                    && (targetPass.departureZone() == this.fromZone.getSelectedItem())) {
                handleValidPass();
            } else {
                handleInvalidPass();
            }
        } else {
            // The passenger does not have a pass
            handleInvalidPass();
        }
    }//GEN-LAST:event_paymentConfirmInspectionActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        AppSwitchboard.mainUI.setEnabled(true);
    }//GEN-LAST:event_formWindowClosing

    private void addFundsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addFundsButtonActionPerformed
        // Get the amount of funds to be added and add it to a travel card
        int amountToAdd = Integer.parseInt(this.addFundsTextField.getText());
        this.currentCard.addFunds(amountToAdd);
        // Save the changes to the travel card
        this.system.getTravelCards().serializeTravelCards();

        JOptionPane.showMessageDialog(validPassPanel, "You have added: £" + amountToAdd);
        String currentBalance = String.format("%.2f", this.currentCard.getBalance());
        // Return to the ticket payment screen
        this.passUserBalance.setText(currentBalance);
        this.paymentUserBalance.setText(currentBalance);
        this.addFundsPanel.setVisible(false);
        this.payForTicketPanel.setVisible(true);

    }//GEN-LAST:event_addFundsButtonActionPerformed

    private void fromZoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fromZoneActionPerformed
        // When the 'from' combo box is interacted with, update the
        // 'to' combo box accordingly
        this.toZone.removeAllItems();
        setUpToZones();
    }//GEN-LAST:event_fromZoneActionPerformed

    private void handleValidPass() {
        // Confirm that the pass is valid and return to the home screen
        // for another scan
        JOptionPane.showMessageDialog(payForTicketPanel, "Ticket Inspection Confirmed", "Success", 1);
        this.validPassPanel.setVisible(false);
        this.payForTicketPanel.setVisible(false);
        this.scanPanel.setVisible(true);
        // Clear the list before re-drawing
        this.toZone.removeAllItems();
    }

    private void handleInvalidPass() {
        // Check the users tickets for any 'unused' tickets that may cover this
        // journey
        boolean unusedTicketFound = false;
        SetOfTickets unusedTickets = this.system.getTickets().getUnusedTicketsForUser(this.currentCard.getUser().getId());
        // Get the journey that the passenger wishes to take
        Journey journey = system.getJourneys().getJourney(
                (Zone) this.fromZone.getSelectedItem(),
                (Zone) this.toZone.getSelectedItem());

        for (Ticket unusedTicket : unusedTickets) {
            if (unusedTicket.getJourney().getStartZone().getId() == journey.getStartZone().getId()
                    && unusedTicket.getJourney().getEndZone().getId() == journey.getEndZone().getId()) {
                if (unusedTicket.getTicketType().toString().equals(this.travelType)) {
                    // A ticket the user owns matches they journey they want to make
                    unusedTicketFound = true;
                    break;
                }
            }
        }
        if (unusedTicketFound) {
            // If they have an unused ticket that matches the journey they wish to take,
            // trigger a 'valid inspection'
            JOptionPane.showMessageDialog(payForTicketPanel, "Valid Ticket Found", "Success", 1);
            this.validPassPanel.setVisible(false);
            this.payForTicketPanel.setVisible(false);
            this.scanPanel.setVisible(true);
        } else {
            // Catch which button the user presses and handle the result
            String[] buttons = {"Pay for Journey", "Cancel"};
            int buttonIndex = JOptionPane.showOptionDialog(null, "Pass not valid for journey", "Invalid Pass",
                    JOptionPane.WARNING_MESSAGE, 0, null, buttons, buttons[1]);
            // If the 'Pay for Journey' button is pressed
            if (buttonIndex == 0) {
                if (handleTransaction()) {
                    // Payment has been successful, notify the user
                    JOptionPane.showMessageDialog(payForTicketPanel, "Ticket Inspection Confirmed", "Success", 1);
                    String currentBalance = String.format("%.2f", this.currentCard.getBalance());
                    this.passUserBalance.setText(currentBalance);
                    this.paymentUserBalance.setText(currentBalance);
                    // End transaction
                    this.validPassPanel.setVisible(false);
                    this.payForTicketPanel.setVisible(false);
                    this.scanPanel.setVisible(true);

                } else {
                    addFunds();
                }
            }
        }
    }

    private void addFunds() {
        // Payment has been unsuccessful, add funds?
        String[] fundsButtons = {"Add Funds", "Cancel"};
        int fundsButton = JOptionPane.showOptionDialog(null, "Insufficient Funds", "Attention",
                JOptionPane.WARNING_MESSAGE, 0, null, fundsButtons, fundsButtons[1]);
        if (fundsButton == 0) {
            this.addFundsPanel.setVisible(true);
            this.payForTicketPanel.setVisible(false);
        }
    }

    private boolean handleTransaction() {
        // Create a new Transaction so that we can handle ticket payment
        Transaction transaction = new Transaction();
        // The users pass does not cover their desired journey,
        // so create a ticket
        Journey journey = system.getJourneys().getJourney(
                (Zone) this.fromZone.getSelectedItem(),
                (Zone) this.toZone.getSelectedItem());

        TypeEnums.TicketType ticketType = null;
        // Discern whether we are travelling on a bus or a train
        if ("TRAIN".equals(this.travelType)) {
            ticketType = TypeEnums.TicketType.TRAIN;
        } else if ("BUS".equals(this.travelType)) {
            ticketType = TypeEnums.TicketType.BUS;
        }

        // Create a new 'ticket' for this journey
        Ticket newTicket = null;
        try {
            newTicket = new Ticket(TravelSystem.getInstance().getTickets()
                    .getNextId(), ticketType, journey, journey.getStartZone().isPeak(), currentCard.getUser().getId(), false);
        } catch (Throwable ex) {
            Logger.getLogger(PortableReaderUI.class.getName()).log(Level.SEVERE, null, ex);
        }

        // Pay for the ticket, returns true if the payment was successful
        return transaction.payForTicket(newTicket, this.currentCard);

    }

    private void setUpUserDetails(User user, TravelCard card) {
        // Set up the user details on the UI panels
        this.passUserName.setText(user.getForename() + " " + user.getSurname());
        this.passUserBalance.setText(Float.toString(card.getBalance()));
        this.passUserDob.setText(user.getDobFormatted("date").toString().replace("-", "/"));
        this.passUserID.setText(Integer.toString(user.getId()));

        this.paymentUserName.setText(user.getForename() + " " + user.getSurname());
        this.paymentUserBalance.setText(String.format("%.2f", card.getBalance()));
        this.paymentUserDob.setText(user.getDobFormatted("date").toString().replace("-", "/"));
        this.paymentUserID.setText(Integer.toString(user.getId()));

        this.validPassPanel.setVisible(false);
        this.payForTicketPanel.setVisible(false);

        // If the passenger has scanned in at a station, use that as the
        // starting point
        if (!card.checkForScannedStation()) {
            this.fromZone.addItem(card.getDepartureDetails().getZone());
            this.fromZone.setEnabled(false);
        } else {
            // If not, display all of the potential departure zones
            this.fromZone.removeAllItems();
            system.getZones().stream().forEach((zone) -> {
                if (!system.getJourneys().getAllZonesDepartingFromStartZone(zone).isEmpty()) {
                    this.fromZone.addItem(zone);
                }
            });
        }
        // Make sure the combo box is clear before re-populating
        this.toZone.removeAllItems();
        setUpToZones();
    }

    private void setUpToZones() {
        if (this.fromZone.getItemAt(0) != null) {
            SetOfZones toZones = system.getJourneys()
                    .getAllZonesDepartingFromStartZone((Zone) this.fromZone.getSelectedItem());

            // Add the potential destination zones to the list
            toZones.stream().forEach((zone) -> {
                this.toZone.addItem(zone);
            });
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PortableReaderUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PortableReaderUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PortableReaderUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PortableReaderUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PortableReaderUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addFundsButton;
    private javax.swing.JPanel addFundsPanel;
    private javax.swing.JTextField addFundsTextField;
    private javax.swing.JComboBox fromZone;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JButton passConfirmInspection;
    private javax.swing.JLabel passUserBalance;
    private javax.swing.JLabel passUserDob;
    private javax.swing.JLabel passUserID;
    private javax.swing.JPanel passUserImage;
    private javax.swing.JLabel passUserName;
    private javax.swing.JPanel payForTicketPanel;
    private javax.swing.JButton paymentConfirmInspection;
    private javax.swing.JLabel paymentUserBalance;
    private javax.swing.JLabel paymentUserDob;
    private javax.swing.JLabel paymentUserID;
    private javax.swing.JPanel paymentUserImage;
    private javax.swing.JLabel paymentUserImagelabel;
    private javax.swing.JLabel paymentUserName;
    private javax.swing.JPanel pnl_portableReaderPassTitle;
    private javax.swing.JPanel pnl_portableReaderPassTitle1;
    private javax.swing.JPanel pnl_portableReaderScanTitle;
    private javax.swing.JPanel pnl_portableReaderScanTitle2;
    private javax.swing.JButton scanCardBusButton;
    private javax.swing.JButton scanCardTrainButton;
    private javax.swing.JPanel scanPanel;
    private javax.swing.JLabel scanPanelTravelCardLabel;
    private javax.swing.JComboBox toZone;
    private javax.swing.JComboBox travelCardsComboBox;
    private javax.swing.JPanel validPassPanel;
    private javax.swing.JLabel validPassUserImagelabel;
    // End of variables declaration//GEN-END:variables
}
